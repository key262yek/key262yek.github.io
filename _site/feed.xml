<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://key262yek.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://key262yek.github.io/" rel="alternate" type="text/html" /><updated>2021-03-11T16:13:30+09:00</updated><id>https://key262yek.github.io/feed.xml</id><title type="html">Myeongseon Choi’s blog</title><subtitle>An amazing website.</subtitle><author><name>Myeongseon Choi</name></author><entry><title type="html">Jekyll Blog 시작하기</title><link href="https://key262yek.github.io/blog/layout/" rel="alternate" type="text/html" title="Jekyll Blog 시작하기" /><published>2021-03-11T05:44:30+09:00</published><updated>2021-03-11T05:44:30+09:00</updated><id>https://key262yek.github.io/blog/layout</id><content type="html" xml:base="https://key262yek.github.io/blog/layout/">&lt;p&gt;처음에는 Remote Theme 기능을 이용해 블로그를 만들고자 하였으나, 설정을 바꾸는데 한계가 있고 버젼 변경에 취약할 가능성이 있는 것 같습니다.
하여 아예 최신 release를 받아서 계속 유지하며 블로그를 운영해보는 것으로 바꾸었습니다. 이 글은 본래 remote theme 상태에서 설정만 바꾸는 방법을 적어놓은 글이었지만, 블로그 시작하는 방법부터 설정 변경까지 모두를 적어두는 글로 수정해 다시 올린게 되었네요.&lt;/p&gt;

&lt;h2 id=&quot;새로-시작하기&quot;&gt;새로 시작하기&lt;/h2&gt;

&lt;p&gt;제일 먼저 해야할 일은 Github에 블로그용 repository를 만드는 것입니다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{github id}.github.io&lt;/code&gt;의 규칙대로 repository를 만들고 내부에 블로그 서식 파일과 포스트 파일들을 업로드하게 되면 이를 토대로 블로그가 만들어집니다.
로컬에서 파일을 수정하기 위해서는 repository를 로컬에 clone해주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git init
git clone https://github.com/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ruby-설치하기&quot;&gt;Ruby 설치하기&lt;/h3&gt;

&lt;p&gt;Github blog는 아무래도 로컬 수정 - 업로드 - Github에서 업데이트 - 홈페이지 수정의 과정을 거치기 때문에 수정한 결과물을 바로바로 블로그에서 확인하기 어렵습니다.
이에 대한 해법은 로컬 환경에서 블로그를 serve 하도록 환경을 조성해 바로바로 변화를 확인할 수 있도록 하는 것인데요.&lt;/p&gt;

&lt;p&gt;Windows환경인지, Macos환경인지, Linux 환경인지에 따라 설치과정은 달라지는데, 저는 MacOS Big Sur 11.2.2 환경에서 설치했습니다.
먼저 command line tools를 설치해야 합니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcode-select &lt;span class=&quot;nt&quot;&gt;--install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jekyll은 2.4.0 버젼 이상의 ruby를 필요로 하고 MacOS는 Catalina 10.15 버젼 이후부터는 루비 2.6.3이 기본 설치되어 있으므로 Ruby 설치를 건너 뛰어도 됩니다.
하지만 이전 버젼의 MacOS를 사용하는 경우에는 Homebrew를 이용해 설치할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Homebrew 설치&lt;/span&gt;
/usr/bin/ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그 후 Ruby의 경로를 환경변수에 추가해줘야합니다.
사용하는 환경에 따라 .zshrc, .bashrc, .bash_profile 등에 추가해줍시다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;export PATH=&quot;/usr/local/opt/ruby/bin:$PATH&quot;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;루비 설정을 확인합니다.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which ruby
&lt;span class=&quot;c&quot;&gt;# /Users/statphy/.rbenv/shims/ruby (.rbenv까지 셋팅이 끝난 상태)&lt;/span&gt;

ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-darwin20]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rbenv-사용하기&quot;&gt;rbenv 사용하기&lt;/h3&gt;

&lt;p&gt;여러 버젼의 ruby를 관리하기 유용한 rbenv를 적용하는 방법도 존재합니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# rbenv 와 ruby-build 설치&lt;/span&gt;
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rbenv

&lt;span class=&quot;c&quot;&gt;# 쉘 환경에 rbenv 가 연동되도록 설정&lt;/span&gt;
rbenv init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그 후 특정 버젼의 ruby를 설치하고, 이를 기본 버젼으로 설정할 수도 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbenv &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;3.0.0
rbenv global 3.0.0
ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-darwin20]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bundler-jekyll-설치&quot;&gt;Bundler, Jekyll 설치&lt;/h3&gt;

&lt;p&gt;이제 Bundler와 Jekyll을 설치하면 블로그를 로컬에서 서빙할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user-install&lt;/span&gt; bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 아래 경로를 환경변수에 추가해주는데, X.X에 앞서 설치된 ruby의 버젼 처음 두 숫자를 넣으면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;export PATH=&quot;$HOME/.gem/ruby/X.X.0/bin:$PATH&quot;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치 후에 알게되었지만, ruby 3.0 부터는 jekyll에 필요한 webrick이 포함 되어있지 않습니다.&lt;/p&gt;

&lt;h3 id=&quot;로컬-서버-확인하기&quot;&gt;로컬 서버 확인하기&lt;/h3&gt;

&lt;p&gt;이제 아래와 같은 명령어를 통해 로컬에서 블로그 서버를 확인할 수 있게 되었습니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하지만 ruby를 3.0 버젼 이후의 버젼으로 설치한 경우에는 이 단계에서 LoadError가 날 수 있는데요. 
이는 해당 버젼부터 jekyll에 필요한 webrick이 빠져있기 때문입니다.
따라서 이를 넣어주고 다시 실행하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle add webrick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;세부설정-변경하기&quot;&gt;세부설정 변경하기&lt;/h2&gt;

&lt;p&gt;이제 본인이 원하는 테마나 폰트, 폰트 사이즈, 하이라이트 색깔, 자간, 줄 간격, 문장 배열 등의 세부적인 부분들을 바꿔볼 차례입니다.&lt;/p&gt;

&lt;h3 id=&quot;테마-변경&quot;&gt;테마 변경&lt;/h3&gt;

&lt;p&gt;테마는 사용하는 &lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes&quot;&gt;Minimal Mistakes&lt;/a&gt;가 제공하는 테마 중 하나를 선택할 수 있습니다.
처음에는 어두운 테마가 좋아서 dark 테마를 사용했었는데, 헤더나 강조표시가 눈에 잘 띄지 않고, 글자에 색을 주기 어려워서 dirt로 옮겨왔습니다.
테마 변경은 &lt;em&gt;_config.yml&lt;/em&gt; 파일을 아래와 같이 수정하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_config.yml 파일 중&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;minimal_mistakes_skin&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dirt&quot;&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만약 remote theme으로 이용하고 있는데 theme 파일을 제대로 불러오고 있지 않다면, 이 과정에서 오류가 발생할 수 있습니다. 그 경우 &lt;em&gt;assets/css/main.scss&lt;/em&gt; 파일을 받아와서 아래의 코드로 수정해주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.scss&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;중&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;minimal-mistakes/skins/dirt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;skin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;테마-color-palette-변경&quot;&gt;테마 color palette 변경&lt;/h3&gt;

&lt;p&gt;Dirt 테마의 기본 색깔도 좋지만 개인적으로 solarized-light 팔레트를 좋아해서 code block의 색깔과 Footer background 색깔을 바꿔주고자 합니다. 이때 수정해줘야하는 파일은 &lt;em&gt;_sass/minimal-mistakes/skins/_dirt.scss&lt;/em&gt;입니다. 
(remote theme의 경우, 앞서 만든 &lt;em&gt;assets/css/main.scss&lt;/em&gt;를 통해 변수 값을 수정하는 방식으로 색을 바꿀 수 있을 것 같습니다만 확인하지는 못했습니다.)&lt;/p&gt;

&lt;p&gt;먼저 페이지 Footer 색과 border 색을 바꿔봅시다.
Solarized-Light의 배경색 코드는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#eee8d5&lt;/code&gt;입니다.
이 색은 경계선으로 쓰기엔 너무 밝아서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$border-color&lt;/code&gt;는 조금 어두운 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#e7dfca&lt;/code&gt;로 주었습니다.
원래 값으로 되돌리기 쉽게하기 위해, 원래 정의는 다른 곳에 주석처리로 남겨두는 것ㅇ 좋습니다.&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;_dirt&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.scss&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;중&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;border-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#e7dfca&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;footer-background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#eee8d5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;code-block-highlight-변경&quot;&gt;Code Block Highlight 변경&lt;/h3&gt;

&lt;p&gt;그 다음은 Code block의 Highlight를 바꾸는 방법입니다.
이것 역시 같은 파일인 &lt;em&gt;_sass/minimal-mistakes/skins/_dirt.scss&lt;/em&gt;를 바꿔주면 됩니다.
기본적인 Solarized color palette는 &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/stylesheets/&quot;&gt;여기&lt;/a&gt;서 확인할 수 있는데, 이것도 만족스럽지 못해 조금 수정해 사용했습니다. (사실 이 문제는 Markdown에서 제공하는 코드 하이라이트가 제 맘에 안드는게 문제인건데, 이것까지 하나하나 수정해가며 모든 언어에서 만족스러운 색 배열을 찾는건 어려울 것 같습니다.)&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#fdf6e3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Background */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base01&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#073642&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Meaningless */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#586&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;e75&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Meaningless */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#657&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;b83&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Meaningless */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#93&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a1a1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Comment */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#657&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;b83&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Body Contents */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#eee8d5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Meaningless */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base07&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#fdf6e3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Meaningless */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#dc322f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* red */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base09&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#cb4b16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* Meaningless orange */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base0a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#b58900&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/*  yellow  */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base0b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#2&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;aa198&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/*  cyan  */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base0c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#268&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bd2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/*  blue  */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base0d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#859900&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/*  green  */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base0e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#6&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;c71c4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/*  violet  */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;base0f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#d33682&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* magenta */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그 결과 코드 블록은 아래와 같은 양식으로 나오게 되었습니다.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&apos;&apos;&apos;

master equation of the system without stagnation is far easier than with finite stagnation.
Here we use simple diagonalization method, compute the solution of master equation

&apos;&apos;&apos;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scipy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linalg&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;master_eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# N : number of particle at time zero
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# r : merging rate / searching rate
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;폰트-변경&quot;&gt;폰트 변경&lt;/h3&gt;

&lt;p&gt;폰트 변경은 기본적으로 &lt;em&gt;_sass&lt;/em&gt; 폴더에 있는 &lt;em&gt;_variable.scss&lt;/em&gt;나 &lt;em&gt;_reset.scss&lt;/em&gt;를 직접 수정하는 방법을 사용할 수 있는데요.
이 방법은 다른 설정과 꼬일 수 있기 때문에 좋지 않고, 다른 방법을 사용하길 권하고 있습니다.
다른 방법으로 제시된 것은 &lt;em&gt;assets/css/main.scss&lt;/em&gt; 파일에 아래의 코드를 추가하는 것인데요.
Import된 minimal_mistakes의 코드들에서 해당 변수의 값을 바꿔주는 방법이기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@import &quot;minimal-mistakes&quot;;&lt;/code&gt; 줄 이후에 추가하시면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.scss&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;아래&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&apos;Noto Sans KR&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;monospace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&apos;Ubuntu Mono&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;type-size-4-5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Ubuntu&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Mono&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;small&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(https://fonts.googleapis.com/css?family=Noto+Sans+KR|Ubuntu+Mono)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;각각의 의미는 간단합니다. 첫번째 줄과 두번째 줄은 theme 전반적으로 정의되어 있는 폰트 변수의 값을 우리가 원하는 Noto Sans KR과 Ubuntu Mono로 바꿔준 것이고, 그리고 마지막 줄은 해당 폰트의 정보를 구글 폰트로부터 받아오겠다는 의미입니다.
이때 세번째 줄은 제가 참고한 블로그에서 그대로 가져온 코드인데, Ubuntu Mono를 그냥 사용하게 되면 inline code나 code block 내의 글자들이 모두 너무 작아지기 때문에, 크기를 맞춰주기 위해 살짝 키운 것으로 보입니다.&lt;/p&gt;

&lt;h3 id=&quot;폰트-사이즈-변경&quot;&gt;폰트 사이즈 변경&lt;/h3&gt;

&lt;p&gt;그 다음은 폰트 사이즈 변경이다. 이것 역시 &lt;em&gt;assets/css/main.scss&lt;/em&gt; 파일을 수정해서 바꿀 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.scss&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;중&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;whatever&lt;/span&gt;

  &lt;span class=&quot;err&quot;&gt;@include&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;breakpoint($medium)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;whatever&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;@include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breakpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;large&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;whatever&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;@include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breakpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;x-large&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;whatever&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가장 작은 것부터, x-large 까지의 폰트 크기를 자유롭게 선택해주면 되는데요. (제가 이해한 것이 맞다면) 반응형으로 변해가는 사이트 폰트 크기들의 기준값을 준다고 이해하면 될 것 같습니다.
기존의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x-large&lt;/code&gt; 값은 18px로 주어져있는데, 이것이 너무 큰 것 같아 이것만 16px로 줄여주었습니다.&lt;/p&gt;

&lt;h3 id=&quot;글자-배경색-변경&quot;&gt;글자 배경색 변경&lt;/h3&gt;

&lt;p&gt;Inline code를 작성하거나 할 때는 글자 뒤에 배경색을 주어 강조하게 되는데요. 
Dirt 테마에서 이 배경색은 흰색으로 주어져있기 때문에 가독성이 좋지 않습니다.
이를 밝은 회색(#e4e6e7)색으로 바꿔주고자 했습니다.
&lt;em&gt;assets/css/main.scss&lt;/em&gt; 파일 아래에 아래와 같은 코드를 추가하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.scss&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;중&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.language-plaintext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;monospace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type-size-5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#e4e6e7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- 
### 자간 변경


### 줄 간격 변경
 --&gt;

&lt;h3 id=&quot;문장-배열-방식-변경&quot;&gt;문장 배열 방식 변경&lt;/h3&gt;

&lt;p&gt;저는 글이 잘리더라도 글이 양쪽 정렬되어 경계가 딱 맞는 것을 좋아합니다.
그래서 양쪽 정렬로 글이 적히도록 셋팅을 바꿨는데요.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.scss&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;중&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.page__content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;justify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.sidebar__right&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여기서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify&lt;/code&gt;가 양쪽 정렬을 의미합니다.
만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.page_content&lt;/code&gt;만 바꿔주게되면 (이 블로그엔 없지만) 사이드바의 글자 양식이 종종 이상하게 나오는 경우가 있는 것 같습니다. 
그런 경우를 제거하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.sidebar__right&lt;/code&gt;에 한해서는 왼쪽 정렬되도록 설정해두었습니다.&lt;/p&gt;

&lt;h3 id=&quot;table-of-contents-추가&quot;&gt;Table of Contents 추가&lt;/h3&gt;

&lt;p&gt;Minimal Mistakes는 글의 Table of Contents를 사이드바에서 확인할 수 있도록 할 수 있습니다.
기본적인 설명은 &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/helpers/#table-of-contents&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있는데요.
post markdown 파일 맨 앞에서 title, date 등의 정보를 적는 부분에 아래의 코드를 추가하면 ToC가 출력되도록 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post의 front matter yaml code 부분&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;toc&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;toc_label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Contents&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;toc_icon&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;fas&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;fa-clipboard-list&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;toc_sticky&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toc_icon&lt;/code&gt; 부분에 사용된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;fas fa-clipboard-list&quot;&lt;/code&gt; &lt;a href=&quot;https://fontawesome.com/icons&quot;&gt;Font Awesome&lt;/a&gt; 사이트에 있는 아이콘을 불러와 사용할 수 있습니다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toc_sticky&lt;/code&gt; 항목은 toc가 화면을 따라오며 붙어있도록 할지 여부를 의미하는데, 저는 이 기능을 좋아하니 true로 두었습니다.&lt;/p&gt;

&lt;h3 id=&quot;favicon-만들기&quot;&gt;Favicon 만들기&lt;/h3&gt;

&lt;p&gt;Favicon이란 브라우저에서 페이지를 열었을 때, 탭의 제목 옆에 뜨게되는 아이콘을 의미합니다.
만약 release 파일을 그대로 압축을 풀어 홈페이지를 만든 경우에는 favicon.ico가 없다는 경고창이 뜨곤 하는데요.
그래서 이 블로그에서는 &lt;img src=&quot;https://key262yek.github.io/favicon.ico&quot; alt=&quot;favicon&quot; /&gt;를 만들어 사용하고 있습니다.
아이콘 자체는 인터넷에서 공짜로 만들어주는 경우도 있고, 기존에 만들어진 것을 공짜로 배포하는 사이트도 있으니 적절히 골라서 repository 제일 밖 directory에 넣어주면 잘 인식하게 됩니다.&lt;/p&gt;

&lt;h3 id=&quot;post에-업데이트-시간-띄우기&quot;&gt;Post에 업데이트 시간 띄우기&lt;/h3&gt;

&lt;p&gt;현재 블로그의 게시글 옆에는 읽는데 걸리는 예상 시간(read-time)이 있습니다.
별로 쓸모있는 정보는 아니기에, 이를 post의 update 시간으로 바꿔쓸 수 있도록 코드를 수정하였습니다.
&lt;em&gt;_includes/archive-single.html&lt;/em&gt; 파일과 &lt;em&gt;_includes/single.html&lt;/em&gt;을 수정해주면 되는데, HTML 코드는 Markdown으로 그대로 옮기기 어렵기 때문에 [commit]을 참조해주세요.&lt;/p&gt;</content><author><name>Myeongseon Choi</name></author><category term="Blog" /><category term="Jekyll" /><category term="Github Blog" /><summary type="html">처음에는 Remote Theme 기능을 이용해 블로그를 만들고자 하였으나, 설정을 바꾸는데 한계가 있고 버젼 변경에 취약할 가능성이 있는 것 같습니다. 하여 아예 최신 release를 받아서 계속 유지하며 블로그를 운영해보는 것으로 바꾸었습니다. 이 글은 본래 remote theme 상태에서 설정만 바꾸는 방법을 적어놓은 글이었지만, 블로그 시작하는 방법부터 설정 변경까지 모두를 적어두는 글로 수정해 다시 올린게 되었네요.</summary></entry><entry><title type="html">Jekyll theme에 수식 입력기 추가하기</title><link href="https://key262yek.github.io/blog/mathjax-to-mmistakes/" rel="alternate" type="text/html" title="Jekyll theme에 수식 입력기 추가하기" /><published>2021-03-11T04:36:30+09:00</published><updated>2021-03-11T04:36:30+09:00</updated><id>https://key262yek.github.io/blog/mathjax-to-mmistakes</id><content type="html" xml:base="https://key262yek.github.io/blog/mathjax-to-mmistakes/">&lt;p&gt;아무래도 물리나, 수학을 전공하다 보니 블로그 글에 수식입력기가 빠르게 필요해졌습니다.
Jekyll theme과 수식입력을 같이 검색하면 많은 예시자료들이 나오는데, 보면 remote theme을 이용하는 경우와 theme git을 모두 clone한 경우를 구분하지 않고 설명하고 있습니다. 
결과적으로는 구분할 필요가 없긴 하지만, 초보자이면서 remote theme을 이용하고 있던 내 입장에서는&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘파일이 없는데 지금이라도 파일들을 모두 받아야하나? 받는 과정에서 지금까지 셋팅한게 다 덮이면 어떡하지?’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;하는 걱정이 들 수밖에 없었습니다. (이 글은 모든 repo를 가져오기로 결정하기 이전에 작성된 글이다) 다행히 Jan Meppe의 &lt;a href=&quot;https://www.janmeppe.com/blog/How-to-add-mathjax-to-minimal-mistakes/&quot;&gt;블로그&lt;/a&gt;에서 remote theme에서 어떤 부분을 고치면 되는지 잘 설명해주었기에, 이를 따라 진행해보았습니다. (본래 블로그의 Step 1은 여기에 필요 없어 보여서 제외했다.)&lt;/p&gt;

&lt;h3 id=&quot;step-1-scriptshtml-복사해오기&quot;&gt;Step 1. scripts.html 복사해오기&lt;/h3&gt;

&lt;p&gt;우선 설정을 바꾸기 위해 ‘모든 파일을 복사해와야하는가?’하면 그렇지 않습니다. 
remote theme의 경우 내 github 저장소에 없는 파일들만 가져오는 방식인 것 같고, 
그러니 내가 필요한 파일만 복사해와 수정하면 됩니다. 
블로그 처음 셋팅할 때 폰트랑 폰트 크기 변경한 것도 assets/css/main.scss 파일만 수정했던 것과 같은 원리라 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;어쨌든 필요한건 &lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes&quot;&gt;Minimal Mistakes repo&lt;/a&gt;에서 &lt;em&gt;minimal-mistakes/_includes/scripts.html&lt;/em&gt; 파일을 로컬 저장소의 &lt;em&gt;_includes/scripts.html&lt;/em&gt;에 복사해오는 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;step-2-scriptshtml-수정하기&quot;&gt;Step 2. scripts.html 수정하기&lt;/h3&gt;

&lt;p&gt;그 다음 &lt;em&gt;scripts.html&lt;/em&gt; 파일에 아래의 코드를 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text/javascript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-MML-AM_CHTML&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text/x-mathjax-config&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;MathJax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tex2jax.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;jax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;input/TeX&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;output/HTML-CSS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;tex2jax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;inlineMath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;displayMath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;processEscapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
     &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;HTML-CSS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;availableFonts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;TeX&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-3-latex-문법-사용&quot;&gt;Step 3. Latex 문법 사용&lt;/h3&gt;

&lt;p&gt;이제 Latex 문법을 사용해 Markdown 파일에 수식을 입력할 수 있습니다. 문장 사이에 쓰이는 math mode는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; 기호나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\( \\)&lt;/code&gt;를 이용하면 되고, equation mode를 추가하는 경우에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\[ \\]&lt;/code&gt;로 수식을 감싸주면 됩니다.&lt;/p&gt;

\[e^{i \pi} = - 1\]

&lt;h3 id=&quot;note-주의사항&quot;&gt;Note. 주의사항&lt;/h3&gt;

&lt;p&gt;이 방법은 remote theme 상태에서 일부 설정만 바꿔주는 방법이다보니, 만약 theme 파일의 버젼이 크게 달라지게 되면 더이상 작동하지 않을 수 있습니다. 그 경우 위의 파일을 새로운 버젼의 문법에 맞춰 다시 수정해야만 합니다.&lt;/p&gt;</content><author><name>Myeongseon Choi</name></author><category term="Blog" /><category term="Jekyll" /><category term="Github Blog" /><summary type="html">아무래도 물리나, 수학을 전공하다 보니 블로그 글에 수식입력기가 빠르게 필요해졌습니다. Jekyll theme과 수식입력을 같이 검색하면 많은 예시자료들이 나오는데, 보면 remote theme을 이용하는 경우와 theme git을 모두 clone한 경우를 구분하지 않고 설명하고 있습니다. 결과적으로는 구분할 필요가 없긴 하지만, 초보자이면서 remote theme을 이용하고 있던 내 입장에서는</summary></entry><entry><title type="html">제한 속도와 출퇴근 시간 평균 속도 사이 관계</title><link href="https://key262yek.github.io/social%20physics/Traffic_Jam_vs_Speed_Limit/" rel="alternate" type="text/html" title="제한 속도와 출퇴근 시간 평균 속도 사이 관계" /><published>2021-03-11T03:36:30+09:00</published><updated>2021-03-11T03:36:30+09:00</updated><id>https://key262yek.github.io/social%20physics/Traffic_Jam_vs_Speed_Limit</id><content type="html" xml:base="https://key262yek.github.io/social%20physics/Traffic_Jam_vs_Speed_Limit/">&lt;p&gt;작년 가을, 한국교통안전공단은 카카오모빌리티와 공동 연구를 통해 ‘도심 속도 하향 정책’의 효과를 분석한 결과를 발표했습니다.
이 보고서에서 “제한속도 하향 시 출·퇴근 시간대 교통정체가 개선되고, 평균속도가 증가했다.”고 밝혔는데요.&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 
제한속도를 기존 시속 60km에서 시속 50km로 줄이면서 심야 시간대 평균 속도가 감소했고, 보행자 사고 발생건수 및 중상가능성이 크게 낮아졌다는 결과도 같이 소개하고 있으나, 교통정체가 개선되었다는 내용만큼 의아한 내용은 아니었습니다.&lt;/p&gt;

&lt;p&gt;제한 속력을 줄였는데 어떻게 평균 속력이 늘어나고, 교통 정체가 개선될 수 있을까요? 
교통 정체는 사고나 교통 신호에 의해 발생하기도 하지만, 차선 변경에 의해 유령 정체가 만들어지기도 합니다. 
해당 연구는 그런 관점에서 교통 체증이 완화된 원인을 두 가지로 제시했는데요.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;운전자들이 불필요한 차로 변경을 줄였다.&lt;/li&gt;
  &lt;li&gt;교통신호 현시도 최적화되어 신호대기 시간이 감소했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;교통체증을 유발하는 차로 변경과 교통신호의 비효율이 감소했기 때문이란 분석인데, 교통신호 비효율은 사실상 속도 감소의 효과가 아니니 상관없었고, ‘왜 차로 변경이 감소했을까’ 하는 질문은 쉽게 답이 나오지 않았습니다.
차로 변경을 하더라도 빠르게 달릴 수 있는 속도가 그다지 차이가 나지 않으니, 그럴바엔 그냥 제자리에서 진행하겠다는 생각이 든 것으로 이해하면 되는건가 싶었습니다.
(물론, 가장 좋은 해법은 해당 기관에 직접 보고서 원문을 요청하는 것이겠지만 제공해줄거였으면 처음부터 공개하지 않았을까 싶어서… 논문으로 나오려나 싶은데 아직 안나왔네요.)&lt;/p&gt;

&lt;p&gt;거시적인 측면에서 바라보면 차로 변경은 교통 체증의 원인이지만, 도로 위에서 운전중인 개인의 입장에서는 조금 빠르게 진행하거나 몇 m의 거리라도 차로가 비어있다면, 차선을 변경해 움직이는 것이 더 빠를 것입니다. 이 유인이 크냐 작냐에 따라 개인의 선택이 달라지겠죠. 여기서 한 가지 가설을 세웠습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;“제한 속도가 낮아짐에 따라 차로 변경으로 얻는 시간 차이가 줄어든다”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;만약 이 가설이 참이라면 현상을 자연스레 이해할 수 있을 것입니다. 다만, 막히는 도로의 평균 속도는 제한 속도보다도 훨씬 느리기 때문에, 제한 속도가 감소했다 하여 차로 변경할 때의 속도 변화까지 영향을 줄 수 있을지 확신은 없습니다. 그래서 이러한 궁금증을 시뮬레이션을 통해 해소해보고자 합니다.&lt;/p&gt;

&lt;h3 id=&quot;시뮬레이션-계획&quot;&gt;시뮬레이션 계획&lt;/h3&gt;

&lt;p&gt;시뮬레이션은 아래와 같은 구조로 구현되어야 합니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;도로, 자동차, 교통신호와 제한속도가 구현되어 있어야하고,&lt;/li&gt;
  &lt;li&gt;차선 간의 속도 차이가 난다던가, 일시적으로 차선이 비어있게 되면 차선을 변경할 수 있도록 하고,&lt;/li&gt;
  &lt;li&gt;개별 차량의 위치와 속력 정보를 계속 추적할 수 있어야한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;더 나아가 운전자들의 주행 습관이 모두 다름을 고려해 가속, 감속 규칙이나 최대 속력을 달리할 필요가 있을 것입니다. 
물리학 전공자라 그런지 이런 규칙을 주는 방법으로 제일 먼저 떠오른건 스스로 설정한 최대속력과 연관되어 받게되는 추진력, 교통 신호에 의해 받게되는 저항력, 앞차와 뒷차간 간격에 따라 달라지는 상호작용. 이 세 가지를 고려해 자동차의 가속도를 결정하는 방법이었습니다.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;한국교통안전공단, “안전속도 5030 시행 후 주행속도 최대 시속 3.3km 빨라졌다!”, &lt;a href=&quot;http://www.kotsa.or.kr/ind/prt/InqDetNANNewsData.do?bbsCd=203&amp;amp;bbsSn=16154&quot;&gt;링크&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Myeongseon Choi</name></author><category term="Social Physics" /><category term="Simulation" /><category term="Statistical Physics" /><summary type="html">작년 가을, 한국교통안전공단은 카카오모빌리티와 공동 연구를 통해 ‘도심 속도 하향 정책’의 효과를 분석한 결과를 발표했습니다. 이 보고서에서 “제한속도 하향 시 출·퇴근 시간대 교통정체가 개선되고, 평균속도가 증가했다.”고 밝혔는데요.1 제한속도를 기존 시속 60km에서 시속 50km로 줄이면서 심야 시간대 평균 속도가 감소했고, 보행자 사고 발생건수 및 중상가능성이 크게 낮아졌다는 결과도 같이 소개하고 있으나, 교통정체가 개선되었다는 내용만큼 의아한 내용은 아니었습니다. 한국교통안전공단, “안전속도 5030 시행 후 주행속도 최대 시속 3.3km 빨라졌다!”, 링크 &amp;#8617;</summary></entry><entry><title type="html">Kramdown 사용법</title><link href="https://key262yek.github.io/blog/Kramdown-Functionality/" rel="alternate" type="text/html" title="Kramdown 사용법" /><published>2021-03-10T04:08:30+09:00</published><updated>2021-03-10T04:08:30+09:00</updated><id>https://key262yek.github.io/blog/Kramdown-Functionality</id><content type="html" xml:base="https://key262yek.github.io/blog/Kramdown-Functionality/">&lt;p&gt;Markdown은 자체 표기법을 사용해 HTML과 같은 웹페이지 양식을 만드는 기능을 지칭합니다.
지금 작성하고 있는 블로그의 글들은 모두 확장자 .md로 쓰여있는데, 이는 markdown의 약자로 문법을 잘 지켜 작성한다면 블로그의 글에 여러 효과를 쉽게 줄 수 있습니다.
Markdown은 John Gruber와 Aaron Swartz가 2004년 처음 만든 이래로 표준화되지 못하고 PHP MArkdown Extra, Multimarkdown, Github Flavored Markdown 등으로 파편화되었는데요.
이 중 Github 블로그는 Kramdown이라는 Markdown을 지원합니다. 
앞으로 원활하고 깔끔한 블로그 글 작성을 위하여 Kramdown의 기능을 익히는 포스트를 첫번째 포스트로 작성해볼까 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-헤더&quot;&gt;1. 헤더&lt;/h3&gt;

&lt;p&gt;헤더 문장을 작성하는 경우에 Kramdown에서는 총 6개 양식의 헤더를 작성할 수 있습니다.
헤더 문장 앞에 #을 갯수에 맞게 붙여주고 아래로 한 줄을 띄워주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# H1 Header&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;## H2 Header&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;### H3 Header&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;#### H4 Header&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;##### H5 Header&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;###### H6 Header&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;h1 class=&quot;no_toc&quot; id=&quot;h1-header&quot;&gt;H1 Header&lt;/h1&gt;

  &lt;h2 class=&quot;no_toc&quot; id=&quot;h2-header&quot;&gt;H2 Header&lt;/h2&gt;

  &lt;h3 class=&quot;no_toc&quot; id=&quot;h3-header&quot;&gt;H3 Header&lt;/h3&gt;

  &lt;h4 class=&quot;no_toc&quot; id=&quot;h4-header&quot;&gt;H4 Header&lt;/h4&gt;

  &lt;h5 class=&quot;no_toc&quot; id=&quot;h5-header&quot;&gt;H5 Header&lt;/h5&gt;

  &lt;h6 class=&quot;no_toc&quot; id=&quot;h6-header&quot;&gt;H6 Header&lt;/h6&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-inline-code&quot;&gt;2. Inline Code&lt;/h3&gt;

&lt;p&gt;문장 사이사이에서 코드를 삽입하고 싶을 때, 특정 부분을 강조하고 싶을 때, 혹은 syntax character라 그냥 쓰면 안되는 경우 (이 경우는 backslash를 이용해 escape할 수도 있는 것 같다) inline code block을 이용하면 좋습니다.
사용 방법은 `를 이용해 내용을 감싸주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;sb&quot;&gt;`이렇게 강조할 수 있어요`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;이렇게 강조할 수 있어요&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ \ ~~~&lt;/code&gt; 이렇게 syntax character를 쓸 수도 있어요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-code-block&quot;&gt;3. Code Block&lt;/h3&gt;

&lt;p&gt;코드 블럭은 작성한 Markdown 원문을 HTML 문법으로 바꾸지 않고 그대로 보여주고 싶을때나, 프로그래밍 언어에 따라 하이라이트를 주고자 할 때 사용할 수 있습니다.
기본적으로 코드 블럭은 아래와 같은 두 가지 방법으로 쓸 수 있습니다. 
첫번째 방법은 4칸을 들여쓰는 방법입니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    이렇게 코드 블럭을
    쓸 수 있습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이렇게 코드 블럭을
쓸 수 있습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;두 번째 방법은 물결표시 ~로 Code를 감싸는 것입니다.
이때 중요한 것은 코드 블럭을 닫는 부분의 물결표가 시작할 때보다 많아야합니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;~~~~&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;
&lt;/span&gt;이렇게 코드 블럭을
쓸 수 있습니다.
~~~
이렇게 개수가 적으면 코드 블럭이
끝나지 않습니다.
&lt;span class=&quot;p&quot;&gt;~~~~&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이렇게 코드 블럭을
쓸 수 있습니다.
&lt;span class=&quot;p&quot;&gt;~~~&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;
&lt;/span&gt;이렇게 개수가 적으면 코드 블럭이
끝나지 않습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;프로그램 코드를 코드 블럭으로 감쌀 때는 가독성을 위해 syntax highlight를 넣곤 합니다.
Kramdown에서 프로그램 코드의 하이라이트를 넣기 위해서는 코드 블럭이 시작하는 ~~~ 옆에 언어의 이름을 기입하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;~~~&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt; ruby
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;what?&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;~~~&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;~~~&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt; java
&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;~~~&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;what?&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-가로선&quot;&gt;4. 가로선&lt;/h3&gt;

&lt;p&gt;글을 작성하다보면 내용 구분이 필요할 때 가로선을 쓸 때가 있죠.
가로선은 아래와 같은 방법들로 그릴 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;* * *

---
&lt;/span&gt;
  _  _  _  _
&lt;span class=&quot;p&quot;&gt;
---------------
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;hr /&gt;

  &lt;hr /&gt;

  &lt;hr /&gt;

  &lt;hr /&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-개행&quot;&gt;5. 개행&lt;/h3&gt;

&lt;p&gt;원문에 그냥 줄넘김해서 쓴다해도 결과물에는 개행이 나타나지 않습니다.
개행을 위해서는 공백을 두 개 작성하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is paragraph  
which contains a hard line break
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is paragraph  &lt;br /&gt;
which contains a hard line break&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-강조&quot;&gt;6. 강조&lt;/h3&gt;

&lt;p&gt;이텔릭체와 진한 글씨 등의 강조구문은 두 가지 방법으로 작성할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이것은 &lt;span class=&quot;ge&quot;&gt;*이탤릭*&lt;/span&gt;, &lt;span class=&quot;gs&quot;&gt;**진하게**&lt;/span&gt;  
이것도 _이탤릭_, __진하게__
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;이것은 &lt;em&gt;이탤릭&lt;/em&gt;, &lt;strong&gt;진하게&lt;/strong&gt;&lt;br /&gt;
이것도 &lt;em&gt;이탤릭&lt;/em&gt;, &lt;strong&gt;진하게&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;7-블록-인용&quot;&gt;7. 블록 인용&lt;/h3&gt;

&lt;p&gt;한 줄 혹은 한 단락을 직접 인용하고자 할 때, &amp;gt; 문자를 맨 앞에 두어 강조할 수 있습니다.
여러 번 사용해 다단계 블록 인용도 가능하구요.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gt&quot;&gt;&amp;gt; 첫번째 블록 인용&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;&amp;gt; &amp;gt; 두번째 블록 인용&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;&amp;gt; ### Header도 됩니다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;첫번째 블록 인용&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;두번째 블록 인용&lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;h3 class=&quot;no_toc&quot; id=&quot;header도-됩니다&quot;&gt;Header도 됩니다&lt;/h3&gt;

&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;8-링크&quot;&gt;8. 링크&lt;/h3&gt;

&lt;p&gt;대괄호 [ 안에 화면에 보여질 링크명을 적고, 괄호 ( 안에 링크 주소를 넣어 사용할 수 있습니다.
링크 주소 뒤에 한 칸을 띄어 title 속성도 줄 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;링크&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;http://kramdown.gettalong.org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

A &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;링크&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;http://kramdown.gettalong.org&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;&quot;hp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

A &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;링크&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;kramdown hp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
to the homepage.

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;kramdown hp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;http://kramdown.gettalong.org&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;&quot;hp&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;


&lt;/span&gt;A link to the [kramdown hp].

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;kramdown hp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;http://kramdown.gettalong.org&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;&quot;hp&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;A &lt;a href=&quot;http://kramdown.gettalong.org&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;A &lt;a href=&quot;http://kramdown.gettalong.org&quot; title=&quot;hp&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;A &lt;a href=&quot;http://kramdown.gettalong.org&quot; title=&quot;hp&quot;&gt;링크&lt;/a&gt;
to the homepage.&lt;/p&gt;

  &lt;p&gt;A link to the &lt;a href=&quot;http://kramdown.gettalong.org&quot; title=&quot;hp&quot;&gt;kramdown hp&lt;/a&gt;.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;9-이미지&quot;&gt;9. 이미지&lt;/h3&gt;

&lt;p&gt;깃헙 저장소의 이미지 소스 주소를 연결함으로써 이미지를 첨부할 수 있습니다.
이미지는 링크와 비슷한 방식이지만 대괄호 앞에 느낌표를 붙여줍니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이미지 : !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;mine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;https://key262yek.github.io/assets/images/new_bio_photo.jpg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미지 : &lt;img src=&quot;https://key262yek.github.io/assets/images/new_bio_photo.jpg&quot; alt=&quot;mine&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;10-각주&quot;&gt;10. 각주&lt;/h3&gt;

&lt;p&gt;특정 문자를 지수 부분으로 올려주는 방법으로 각주를 표기할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;각주1 선언부분 a footnote[^1].  
각주2 선언부분 a footnote[^2].

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;^1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;각주에&lt;/span&gt; 대한 설명 내용 부분 (문서 최하단)
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;^2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;각주에&lt;/span&gt; 대한 설명 내용 부분 (문서 최하단)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;각주1 선언부분 a footnote&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;br /&gt;
각주2 선언부분 a footnote&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;11-문단&quot;&gt;11. 문단&lt;/h3&gt;

&lt;p&gt;문단은 아래와 같은 문법을 따라 구분할 수 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;개행을 하더라도 한줄로 같은 문단으로 묶임&lt;/li&gt;
  &lt;li&gt;띄어쓰기 두 번을 붙이면 같은 문단에 묶이지만 개행이 되어 보인다.&lt;/li&gt;
  &lt;li&gt;한 줄 더 개행하면 서로 다른 문단에 묶임.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;같은 라인 문단 1, 
같은 라인 문단 2

같은 문단 다른라인 1  
같은 문단 다른 라인 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;같은 라인 문단 1, 
같은 라인 문단 2&lt;/p&gt;

  &lt;p&gt;같은 문단 다른라인 1&lt;br /&gt;
같은 문단 다른라인 2 &lt;br /&gt;
같은 문단 다른 라인 3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;12-ordered-list&quot;&gt;12. Ordered List&lt;/h3&gt;

&lt;p&gt;1,2,3 순번이 있는 리스트를 지원합니다. 
순번별로 개행해주어야 꼬이지 않습니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;순서 리스트 1  
&lt;span class=&quot;p&quot;&gt;
1.&lt;/span&gt; 리스트 Item 1  
&lt;span class=&quot;p&quot;&gt;2.&lt;/span&gt; 리스트 Item 2  
&lt;span class=&quot;p&quot;&gt;2.&lt;/span&gt; 2번째인듯한 리스트 Item 3
   , 다음줄인듯한 3번째 뒷부분 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;순서 리스트 1&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;리스트 Item 1&lt;/li&gt;
    &lt;li&gt;리스트 Item 2&lt;/li&gt;
    &lt;li&gt;2번째인듯한 리스트 Item 3
, 다음줄인듯한 3번째 뒷부분&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;순서 리스트2
&lt;span class=&quot;p&quot;&gt;
1.&lt;/span&gt; 리스트 Item 1
&lt;span class=&quot;gt&quot;&gt;    &amp;gt; 블록 인용과 함께&lt;/span&gt;
    
    # 헤더와 함께
&lt;span class=&quot;p&quot;&gt;
2.&lt;/span&gt; 리스트 Item 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;순서 리스트2&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;리스트 Item 1
      &lt;blockquote&gt;
        &lt;p&gt;블록 인용과 함께&lt;/p&gt;
      &lt;/blockquote&gt;

      &lt;p&gt;# 헤더와 함께&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;리스트 Item 2&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;순서 리스트 3
&lt;span class=&quot;p&quot;&gt;
1.&lt;/span&gt; 리스트 Item 1
&lt;span class=&quot;p&quot;&gt;    1.&lt;/span&gt; 서브 리스트 Item 1
&lt;span class=&quot;p&quot;&gt;    2.&lt;/span&gt; 서브 리스트 Item 2
&lt;span class=&quot;p&quot;&gt;    3.&lt;/span&gt; 서브 리스트 Item 3
&lt;span class=&quot;p&quot;&gt;2.&lt;/span&gt; 리스트 Item 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;순서 리스트 3&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;리스트 Item 1
      &lt;ol&gt;
        &lt;li&gt;서브 리스트 Item 1&lt;/li&gt;
        &lt;li&gt;서브 리스트 Item 2&lt;/li&gt;
        &lt;li&gt;서브 리스트 Item 3&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
    &lt;li&gt;리스트 Item 2&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;13-unordered-list&quot;&gt;13. Unordered List&lt;/h3&gt;

&lt;p&gt;순번 없는 리스트를 지원합니다.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;순서 없는 리스트1
&lt;span class=&quot;p&quot;&gt;
*&lt;/span&gt; Item1
,Item1의 뒷부분
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;순서 없는 리스트 1&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Item 1
, Item 1의 뒷부분&lt;/li&gt;
    &lt;li&gt;Item 2&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;순서 없는 리스트2
&lt;span class=&quot;p&quot;&gt;
*&lt;/span&gt; Item 1
&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; Item 2
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Item 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;순서 없는 리스트 2&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Item 1&lt;/li&gt;
    &lt;li&gt;Item 2&lt;/li&gt;
    &lt;li&gt;Item 3&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;14-정의-리스트&quot;&gt;14. 정의 리스트&lt;/h3&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;용어1
: 정의1
: 정의2

용어2
용어3(2번 같은 뜻)
: 용어2,3번의 정의

용어4

: 정의 문단 1
: 정의 문단 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;dl&gt;
    &lt;dt&gt;용어 1&lt;/dt&gt;
    &lt;dd&gt;정의 1&lt;/dd&gt;
    &lt;dd&gt;정의 2&lt;/dd&gt;
    &lt;dt&gt;용어 2&lt;/dt&gt;
    &lt;dt&gt;용어 3 (2번과 같은 뜻)&lt;/dt&gt;
    &lt;dd&gt;용어 2, 3의 정의&lt;/dd&gt;
    &lt;dt&gt;용어 4&lt;/dt&gt;
    &lt;dd&gt;
      &lt;p&gt;정의 문단 1&lt;/p&gt;
    &lt;/dd&gt;
    &lt;dd&gt;정의 문단 2&lt;/dd&gt;
  &lt;/dl&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;15-테이블&quot;&gt;15. 테이블&lt;/h3&gt;

&lt;p&gt;테이블은 아래와 같은 문자들로 구분선을 그어줄 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;:파이프 라인으로 컬럼을 구분&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;:—– : 헤더와 body를 구분해줌.&lt;/li&gt;
  &lt;li&gt;— : 테이블 body끼리를 구분&lt;/li&gt;
  &lt;li&gt;=== : 테이블 foot을 구분&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| 헤더1 | 헤더2 | 헤더3 |
|:--------|:-------:|--------:|
| 컬럼1   | 컬럼2   | 컬럼3   |
| 컬럼4   | 컬럼5   | 컬럼6   |
|----
| 컬럼1   | 컬럼2   | 컬럼3   |
| 컬럼4   | 컬럼5   | 컬럼6   |
|=====
| Foot1   | Foot2   | Foot3
{: rules=&quot;groups&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;table rules=&quot;groups&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th style=&quot;text-align: left&quot;&gt;헤더1&lt;/th&gt;
        &lt;th style=&quot;text-align: center&quot;&gt;헤더2&lt;/th&gt;
        &lt;th style=&quot;text-align: right&quot;&gt;헤더3&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;컬럼1&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;컬럼2&lt;/td&gt;
        &lt;td style=&quot;text-align: right&quot;&gt;컬럼3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;컬럼4&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;컬럼5&lt;/td&gt;
        &lt;td style=&quot;text-align: right&quot;&gt;컬럼6&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;컬럼1&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;컬럼2&lt;/td&gt;
        &lt;td style=&quot;text-align: right&quot;&gt;컬럼3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;컬럼4&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;컬럼5&lt;/td&gt;
        &lt;td style=&quot;text-align: right&quot;&gt;컬럼6&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;tfoot&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;Foot1&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;Foot2&lt;/td&gt;
        &lt;td style=&quot;text-align: right&quot;&gt;Foot3&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tfoot&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;각주에 대한 설명 내용 부분 (문서 최하단) &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;각주에 대한 설명 내용 부분 (문서 최하단) &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Myeongseon Choi</name></author><category term="Blog" /><category term="Markdown" /><category term="Github Blog" /><summary type="html">Markdown은 자체 표기법을 사용해 HTML과 같은 웹페이지 양식을 만드는 기능을 지칭합니다. 지금 작성하고 있는 블로그의 글들은 모두 확장자 .md로 쓰여있는데, 이는 markdown의 약자로 문법을 잘 지켜 작성한다면 블로그의 글에 여러 효과를 쉽게 줄 수 있습니다. Markdown은 John Gruber와 Aaron Swartz가 2004년 처음 만든 이래로 표준화되지 못하고 PHP MArkdown Extra, Multimarkdown, Github Flavored Markdown 등으로 파편화되었는데요. 이 중 Github 블로그는 Kramdown이라는 Markdown을 지원합니다. 앞으로 원활하고 깔끔한 블로그 글 작성을 위하여 Kramdown의 기능을 익히는 포스트를 첫번째 포스트로 작성해볼까 합니다.</summary></entry></feed>